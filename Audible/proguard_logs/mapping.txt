com.google.ads.Ad -> com.google.ads.a:
com.google.ads.AdActivity -> com.google.ads.AdActivity:
    java.lang.Object a -> a
    com.google.ads.AdActivity b -> b
    com.google.ads.d c -> c
    com.google.ads.AdActivity d -> d
    com.google.ads.AdActivity e -> e
    com.google.ads.h f -> f
    boolean g -> g
    long h -> h
    android.widget.RelativeLayout i -> i
    com.google.ads.AdActivity j -> j
    boolean k -> k
    com.google.ads.g l -> l
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    com.google.ads.g getAdVideoView() -> a
    com.google.ads.h getOpeningAdWebView() -> b
    boolean isShowing() -> c
    void launchAdActivity(com.google.ads.d,com.google.ads.e) -> a
    void a(com.google.ads.d) -> a
    void moveAdVideoView(int,int,int,int) -> a
    void newAdVideoView(int,int,int,int) -> b
    android.widget.RelativeLayout$LayoutParams a(int,int,int,int) -> c
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void a(com.google.ads.h,boolean,int) -> a
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void a() -> d
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.google.ads.AdListener -> com.google.ads.b:
com.google.ads.AdRequest -> com.google.ads.c:
    com.google.ads.AdRequest$Gender a -> b
    java.lang.String b -> c
    java.util.Set c -> d
    boolean d -> e
    java.util.Map e -> f
    android.location.Location f -> g
    boolean g -> h
    boolean h -> i
    java.lang.String TEST_EMULATOR -> a
    java.util.Set i -> j
    void addKeyword(java.lang.String) -> a
    void addExtra(java.lang.String,java.lang.Object) -> a
    java.util.Map getRequestMap(android.content.Context) -> a
    void addTestDevice(java.lang.String) -> b
com.google.ads.AdRequest$ErrorCode -> com.google.ads.d:
    com.google.ads.AdRequest$ErrorCode INVALID_REQUEST -> a
    com.google.ads.AdRequest$ErrorCode NO_FILL -> b
    com.google.ads.AdRequest$ErrorCode NETWORK_ERROR -> c
    com.google.ads.AdRequest$ErrorCode INTERNAL_ERROR -> d
    java.lang.String a -> e
    com.google.ads.AdRequest$ErrorCode[] b -> f
    com.google.ads.AdRequest$ErrorCode[] values() -> values
    com.google.ads.AdRequest$ErrorCode valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.AdRequest$Gender -> com.google.ads.e:
    com.google.ads.AdRequest$Gender UNKNOWN -> a
    com.google.ads.AdRequest$Gender MALE -> b
    com.google.ads.AdRequest$Gender FEMALE -> c
    com.google.ads.AdRequest$Gender[] a -> d
    com.google.ads.AdRequest$Gender[] values() -> values
    com.google.ads.AdRequest$Gender valueOf(java.lang.String) -> valueOf
com.google.ads.AdSize -> com.google.ads.f:
    com.google.ads.AdSize BANNER -> a
    com.google.ads.AdSize IAB_MRECT -> b
    com.google.ads.AdSize IAB_BANNER -> c
    com.google.ads.AdSize IAB_LEADERBOARD -> d
    int a -> e
    int b -> f
    java.lang.String c -> g
    int getWidth() -> a
    int getHeight() -> b
    java.lang.String toString() -> toString
com.google.ads.AdView -> com.google.ads.AdView:
    com.google.ads.d a -> a
    void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> b
    void destroy() -> a
    void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet) -> a
    void a(android.content.Context,android.util.AttributeSet) -> a
    void a(android.app.Activity,com.google.ads.AdSize,java.lang.String) -> a
    void loadAd(com.google.ads.AdRequest) -> a
com.google.ads.InterstitialAd -> com.google.ads.g:
com.google.ads.a -> com.google.ads.h:
    java.util.Map a -> a
    java.util.Map b -> b
    void a(com.google.ads.d,java.util.Map,android.net.Uri,android.webkit.WebView) -> a
    boolean a(android.net.Uri) -> a
    boolean b(android.net.Uri) -> b
    boolean c(android.net.Uri) -> c
    void a(android.webkit.WebView,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,java.util.Map) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
com.google.ads.aa -> com.google.ads.i:
    boolean a(android.content.Context) -> a
    boolean a(android.content.Intent,android.content.Context) -> a
com.google.ads.ab -> com.google.ads.j:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ab$a -> com.google.ads.k:
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.ab$b -> com.google.ads.l:
    com.google.ads.ab$b a -> a
    com.google.ads.ab$b b -> b
    java.lang.String c -> c
    com.google.ads.ab$b[] d -> d
    com.google.ads.ab$b[] values() -> values
    com.google.ads.ab$b valueOf(java.lang.String) -> valueOf
com.google.ads.ab$c -> com.google.ads.m:
    com.google.ads.d a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.b -> com.google.ads.n:
    com.google.ads.c a -> a
    com.google.ads.d b -> b
    boolean c -> c
    boolean d -> d
    java.lang.String e -> e
    void a() -> a
    void a(java.net.HttpURLConnection) -> a
    void b(java.net.HttpURLConnection) -> b
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void run() -> run
com.google.ads.c -> com.google.ads.o:
    java.lang.String a -> a
    java.lang.String b -> b
    com.google.ads.b c -> c
    com.google.ads.d d -> d
    com.google.ads.AdRequest e -> e
    android.webkit.WebView f -> f
    java.lang.String g -> g
    java.util.LinkedList h -> h
    boolean i -> i
    com.google.ads.AdRequest$ErrorCode j -> j
    boolean k -> k
    int l -> l
    java.lang.Thread m -> m
    boolean n -> n
    void a(java.lang.String) -> a
    void a() -> a
    void a(com.google.ads.AdRequest) -> a
    void run() -> run
    java.lang.String a(com.google.ads.AdRequest,android.app.Activity) -> a
    void a(com.google.ads.AdRequest$ErrorCode,boolean) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void b() -> b
    void a(int) -> a
    void a(boolean) -> a
com.google.ads.c$a -> com.google.ads.p:
    com.google.ads.d b -> b
    android.webkit.WebView c -> c
    com.google.ads.b d -> d
    com.google.ads.AdRequest$ErrorCode e -> e
    boolean f -> f
    com.google.ads.c a -> a
    void run() -> run
com.google.ads.c$b -> com.google.ads.q:
    com.google.ads.c a -> a
com.google.ads.c$c -> com.google.ads.r:
    java.lang.String b -> b
    java.lang.String c -> c
    android.webkit.WebView d -> d
    com.google.ads.c a -> a
    void run() -> run
com.google.ads.c$d -> com.google.ads.s:
    com.google.ads.c a -> a
com.google.ads.c$e -> com.google.ads.t:
    com.google.ads.d b -> b
    java.util.LinkedList c -> c
    int d -> d
    com.google.ads.c a -> a
    void run() -> run
com.google.ads.d -> com.google.ads.u:
    java.lang.Object a -> a
    java.lang.ref.WeakReference b -> b
    com.google.ads.Ad c -> c
    com.google.ads.AdListener d -> d
    com.google.ads.c e -> e
    com.google.ads.AdRequest f -> f
    com.google.ads.AdSize g -> g
    com.google.ads.f h -> h
    java.lang.String i -> i
    com.google.ads.h j -> j
    com.google.ads.i k -> k
    android.os.Handler l -> l
    long m -> m
    boolean n -> n
    boolean o -> o
    android.content.SharedPreferences p -> p
    long q -> q
    com.google.ads.x r -> r
    boolean s -> s
    java.util.LinkedList t -> t
    java.util.LinkedList u -> u
    int v -> v
    void a(java.lang.String) -> a
    void a(java.util.LinkedList) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    android.app.Activity e() -> e
    com.google.ads.Ad f() -> f
    com.google.ads.c g() -> g
    java.lang.String h() -> h
    com.google.ads.h i() -> i
    com.google.ads.i j() -> j
    com.google.ads.AdSize k() -> k
    com.google.ads.f l() -> l
    void a(int) -> a
    int m() -> m
    long n() -> n
    boolean A() -> w
    boolean p() -> o
    void a(com.google.ads.AdRequest) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void q() -> p
    void r() -> q
    void s() -> r
    void t() -> s
    void u() -> t
    void v() -> x
    boolean w() -> u
    void B() -> y
    void a(java.lang.Runnable) -> a
    void x() -> v
    void a$176853ce() -> z
    void a(long) -> a
    void a(float) -> a
    void b(long) -> b
    void z() -> A
com.google.ads.e -> com.google.ads.v:
    java.lang.String a -> a
    java.util.HashMap b -> b
    android.os.Bundle a() -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
com.google.ads.f -> com.google.ads.w:
    java.util.LinkedList b -> b
    long c -> c
    long d -> d
    java.util.LinkedList e -> e
    long f -> f
    java.lang.String g -> g
    boolean h -> h
    boolean i -> i
    java.lang.String a -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    long e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    long h() -> h
    long i() -> i
    java.lang.String j() -> j
    void a(java.lang.String) -> a
    boolean k() -> k
    void l() -> l
    boolean m() -> m
    void n() -> n
    void o() -> o
    java.lang.String p() -> p
    void b(java.lang.String) -> b
com.google.ads.g -> com.google.ads.x:
    java.lang.ref.WeakReference b -> b
    com.google.ads.h c -> c
    android.widget.MediaController a -> a
    long d -> d
    android.widget.VideoView e -> e
    java.lang.String f -> f
    void a() -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void b() -> b
    void c() -> c
    void a(int) -> a
    void a(android.view.MotionEvent) -> a
    void d() -> d
    void e() -> e
com.google.ads.g$a -> com.google.ads.y:
    java.lang.ref.WeakReference a -> a
    android.os.Handler b -> b
    void run() -> run
    void a() -> a
com.google.ads.h -> com.google.ads.z:
    java.lang.ref.WeakReference a -> a
    com.google.ads.AdSize b -> b
    void a() -> a
    com.google.ads.AdActivity b() -> b
    void a(com.google.ads.AdActivity) -> a
    void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> loadDataWithBaseURL
    void loadUrl(java.lang.String) -> loadUrl
    void stopLoading() -> stopLoading
    void destroy() -> destroy
    void onMeasure(int,int) -> onMeasure
com.google.ads.i -> com.google.ads.aa:
    com.google.ads.d a -> a
    java.util.Map b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void a() -> a
    void b() -> b
    void c() -> c
com.google.ads.j -> com.google.ads.ab:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.k -> com.google.ads.ac:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.l -> com.google.ads.ad:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.m -> com.google.ads.ae:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.n -> com.google.ads.af:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.o -> com.google.ads.ag:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.p -> com.google.ads.ah:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.q -> com.google.ads.ai:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.s -> com.google.ads.aj:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.searchads.SearchAdRequest -> com.google.ads.a.a:
    java.lang.String a -> b
    int b -> c
    android.util.Pair c -> d
    int d -> e
    int e -> f
    int f -> g
    java.lang.String g -> h
    int h -> i
    int i -> j
    com.google.ads.searchads.SearchAdRequest$BorderType j -> k
    int k -> l
    java.util.Map getRequestMap(android.content.Context) -> a
    java.lang.String a(int) -> a
com.google.ads.searchads.SearchAdRequest$BorderType -> com.google.ads.a.b:
    com.google.ads.searchads.SearchAdRequest$BorderType NONE -> a
    com.google.ads.searchads.SearchAdRequest$BorderType DASHED -> b
    com.google.ads.searchads.SearchAdRequest$BorderType DOTTED -> c
    com.google.ads.searchads.SearchAdRequest$BorderType SOLID -> d
    java.lang.String a -> e
    com.google.ads.searchads.SearchAdRequest$BorderType[] b -> f
    com.google.ads.searchads.SearchAdRequest$BorderType[] values() -> values
    com.google.ads.searchads.SearchAdRequest$BorderType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.t -> com.google.ads.ak:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.u -> com.google.ads.al:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.util.AdUtil -> com.google.ads.util.AdUtil:
    int a -> a
    java.lang.Boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.media.AudioManager f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String a(android.content.Context) -> a
    int a() -> a
    int b() -> b
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    boolean b(android.content.Context) -> b
    boolean a(int,int,java.lang.String) -> a
    boolean c(android.content.Context) -> c
    boolean c() -> c
    boolean a(android.net.Uri) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    com.google.ads.util.AdUtil$a g(android.content.Context) -> g
    android.util.DisplayMetrics a(android.app.Activity) -> a
    java.lang.String a(android.location.Location) -> a
    java.lang.String b(java.lang.String) -> b
    java.util.HashMap b(android.net.Uri) -> b
    boolean d() -> d
    void a(boolean) -> a
    void h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    void a(android.webkit.WebView) -> a
    void a(java.net.HttpURLConnection,android.content.Context) -> a
    java.lang.String a(java.util.Map) -> a
    org.json.JSONObject b(java.util.Map) -> b
    org.json.JSONArray a(java.util.Set) -> a
com.google.ads.util.AdUtil$UserActivityReceiver -> com.google.ads.util.AdUtil$UserActivityReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.ads.util.AdUtil$a -> com.google.ads.util.a:
    com.google.ads.util.AdUtil$a a -> a
    com.google.ads.util.AdUtil$a b -> b
    com.google.ads.util.AdUtil$a c -> c
    com.google.ads.util.AdUtil$a d -> d
    com.google.ads.util.AdUtil$a e -> e
    com.google.ads.util.AdUtil$a f -> f
    com.google.ads.util.AdUtil$a[] g -> g
    com.google.ads.util.AdUtil$a[] values() -> values
    com.google.ads.util.AdUtil$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.a -> com.google.ads.util.b:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.Throwable) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void a(java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.Throwable) -> b
    boolean a(java.lang.String,int) -> a
com.google.ads.util.b -> com.google.ads.util.c:
    boolean a -> a
    java.lang.String a(byte[]) -> a
com.google.ads.util.b$a -> com.google.ads.util.d:
    byte[] a -> a
    int b -> b
com.google.ads.util.b$b -> com.google.ads.util.e:
    byte[] h -> h
    byte[] i -> i
    byte[] j -> j
    int c -> c
    int k -> k
    boolean d -> d
    boolean e -> e
    boolean f -> f
    byte[] l -> l
    boolean g -> g
    boolean a(byte[],int) -> a
com.google.ads.util.c -> com.google.ads.util.f:
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    int a(android.content.Context,float,int) -> a
com.google.ads.v -> com.google.ads.am:
    int a(java.util.HashMap,java.lang.String,int,android.util.DisplayMetrics) -> a
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.w -> com.google.ads.an:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.google.ads.x -> com.google.ads.ao:
    java.lang.ref.WeakReference a -> a
    void run() -> run
com.google.ads.y -> com.google.ads.ap:
    android.net.Uri a -> a
    android.net.Uri b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.google.ads.z -> com.google.ads.aq:
    void a(android.webkit.WebView,boolean) -> a
com.google.ads.z$a -> com.google.ads.ar:
    java.lang.ref.WeakReference a -> a
    void run() -> run
com.google.ads.z$b -> com.google.ads.as:
    java.lang.ref.WeakReference a -> a
    android.webkit.WebView b -> b
    java.lang.String c -> c
    void run() -> run
com.google.ads.z$c -> com.google.ads.at:
    boolean a -> a
    android.webkit.WebView b -> b
    void run() -> run
com.softenido.audible.AudibleMain -> com.softenido.audible.AudibleMain:
    java.util.logging.Logger logger -> an
    java.lang.String head -> ao
    java.lang.String body -> ap
    java.util.List bodyParts -> aq
    java.util.List paragraphs -> ar
    com.softenido.cafedroid.admob.AdMob admob -> as
    android.widget.TextView title -> a
    android.widget.ListView textList -> b
    android.widget.EditText textEdit -> c
    com.softenido.cafedroid.gauge.DroidGaugeView gaugePlayer -> d
    com.softenido.cafedroid.gauge.DroidGaugeView gaugeClassifier -> e
    android.widget.LinearLayout volumePannel -> f
    android.widget.SeekBar volumeBar -> g
    android.widget.TextView volumeText -> h
    android.widget.Button volumeAdd -> i
    android.widget.Button volumeSub -> j
    android.view.View layoutHomeExtra -> k
    android.widget.ImageButton extraCopy -> l
    android.widget.ImageButton extraPaste -> m
    android.widget.ImageButton extraErase -> n
    android.widget.ImageButton extraKeyboard -> o
    android.widget.ImageButton extraFile -> p
    android.widget.ImageButton extraSendto -> q
    android.widget.ToggleButton toggleExtra -> r
    android.widget.ToggleButton toggleVolume -> s
    android.widget.ToggleButton toggleLang -> t
    android.widget.ToggleButton togglePhrase -> u
    android.widget.ToggleButton toggleAuto -> v
    android.widget.Button setup -> w
    android.widget.ImageButton prev -> x
    android.widget.ImageButton next -> y
    android.widget.ImageButton stop -> z
    android.widget.ImageButton play -> A
    android.widget.ImageButton pause -> B
    android.widget.ImageButton resume -> C
    android.widget.ImageButton install -> D
    android.os.Handler handler -> E
    com.softenido.audible.AudibleMain$Status status -> at
    com.softenido.cafedroid.speech.SpeechManager manager -> au
    com.softenido.cafedroid.speech.SpeechSpeaker speaker -> av
    com.softenido.cafedroid.speech.SpeechPlayer player -> aw
    com.softenido.cafedroid.util.ui.Notifier notifier -> F
    boolean readingLowercase -> G
    boolean readingIgnoreTitle -> H
    boolean readingIgnoreTitleRepeated -> I
    java.lang.String readingIgnore -> J
    java.lang.String readingAlternative -> K
    boolean autoPlayExit -> L
    boolean autoPlay -> M
    boolean autoExit -> N
    boolean autoScreenLock -> O
    int langUnit -> P
    com.softenido.audible.Theme theme -> Q
    com.softenido.audible.FontConfig font -> R
    boolean showToasts -> S
    boolean showProgress -> T
    boolean earlySave -> U
    boolean earlyDetect -> V
    boolean needInstallEngine -> ax
    com.softenido.audible.AudiblePreferences settings -> W
    com.softenido.gutenberg.GutenbergLanguageClassifier classifier -> X
    com.softenido.cafedroid.os.PolicyAdmin policyAdmin -> Y
    java.lang.String volumePrefix -> Z
    int lastSmoothScroll -> ay
    android.view.View$OnClickListener toggleVolumeListener -> aa
    android.widget.SeekBar$OnSeekBarChangeListener volumeBarListener -> ab
    android.view.View$OnClickListener volumeAddListener -> ac
    android.view.View$OnClickListener volumeSubListener -> ad
    android.view.View$OnClickListener toggleLangListener -> ae
    android.view.View$OnClickListener toggleExtraListener -> af
    android.view.View$OnClickListener extraCopyListener -> ag
    android.view.View$OnClickListener extraPasteListener -> ah
    android.view.View$OnClickListener extraEraseListener -> ai
    android.view.View$OnClickListener extraKeyboardListener -> aj
    android.view.View$OnClickListener extraFileListener -> ak
    android.view.View$OnClickListener extraSendtoListener -> al
    boolean stoppedByVolume -> am
    void onCreate(android.os.Bundle) -> onCreate
    com.softenido.cafedroid.speech.SpeechPlayer buildSpeechPlayer() -> d
    void loadPreferences() -> e
    void setTitleAndText(java.lang.String,java.lang.String) -> a
    void setStatus(com.softenido.audible.AudibleMain$Status) -> a
    void speakerPlay() -> f
    void speakerPause() -> g
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onStatusPlay() -> a
    void onStatusPlaying$15c63d6c(int) -> a
    void onStatusStop() -> b
    void onStatusPause() -> c
    void setVolume(int) -> b
    void adjustVolume(int) -> c
    void paintVolume() -> h
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean access$002$7933d1fe(com.softenido.audible.AudibleMain) -> a
    void access$100(com.softenido.audible.AudibleMain,com.softenido.audible.AudibleMain$Status) -> a
    void access$200(com.softenido.audible.AudibleMain) -> b
    com.softenido.cafedroid.speech.SpeechPlayer access$300(com.softenido.audible.AudibleMain) -> c
    void access$400(com.softenido.audible.AudibleMain) -> d
    void access$500(com.softenido.audible.AudibleMain) -> e
    void access$600(com.softenido.audible.AudibleMain) -> f
    int access$700(com.softenido.audible.AudibleMain) -> g
    int access$702(com.softenido.audible.AudibleMain,int) -> a
    java.lang.String access$800(com.softenido.audible.AudibleMain) -> h
    void access$900(com.softenido.audible.AudibleMain,java.lang.String,java.lang.String) -> a
    void access$1000(com.softenido.audible.AudibleMain) -> i
    java.lang.String access$1100(com.softenido.audible.AudibleMain) -> j
com.softenido.audible.AudibleMain$1 -> com.softenido.audible.a:
    com.softenido.audible.AudibleMain this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.softenido.audible.AudibleMain$10 -> com.softenido.audible.b:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$11 -> com.softenido.audible.c:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$12 -> com.softenido.audible.d:
    int val$index -> a
    com.softenido.audible.AudibleMain this$0 -> b
    void run() -> run
com.softenido.audible.AudibleMain$13 -> com.softenido.audible.e:
    com.softenido.audible.AudibleMain this$0 -> a
    void run() -> run
com.softenido.audible.AudibleMain$14 -> com.softenido.audible.f:
    com.softenido.audible.AudibleMain this$0 -> a
    void run() -> run
com.softenido.audible.AudibleMain$15 -> com.softenido.audible.g:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$16 -> com.softenido.audible.h:
    com.softenido.audible.AudibleMain this$0 -> a
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.softenido.audible.AudibleMain$17 -> com.softenido.audible.i:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$18 -> com.softenido.audible.j:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$19 -> com.softenido.audible.k:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$2 -> com.softenido.audible.l:
    com.softenido.audible.AudibleMain this$0 -> a
    void onSpeekerInstallNeeded() -> a
    void onSpeekerInitied(boolean) -> a
com.softenido.audible.AudibleMain$20 -> com.softenido.audible.m:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$21 -> com.softenido.audible.n:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$22 -> com.softenido.audible.o:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$23 -> com.softenido.audible.p:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$24 -> com.softenido.audible.q:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$25 -> com.softenido.audible.r:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$26 -> com.softenido.audible.s:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$27 -> com.softenido.audible.t:
    int[] $SwitchMap$com$softenido$audible$AudibleMain$Status -> a
com.softenido.audible.AudibleMain$3 -> com.softenido.audible.u:
    com.softenido.audible.AudibleMain this$0 -> a
    void run() -> run
com.softenido.audible.AudibleMain$4 -> com.softenido.audible.v:
    android.content.Intent val$about -> a
    com.softenido.audible.AudibleMain this$0 -> b
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$5 -> com.softenido.audible.w:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$6 -> com.softenido.audible.x:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$7 -> com.softenido.audible.y:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$8 -> com.softenido.audible.z:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$9 -> com.softenido.audible.aa:
    com.softenido.audible.AudibleMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.audible.AudibleMain$Status -> com.softenido.audible.ab:
    com.softenido.audible.AudibleMain$Status INSTALL -> a
    com.softenido.audible.AudibleMain$Status READY -> b
    com.softenido.audible.AudibleMain$Status PLAYING -> c
    com.softenido.audible.AudibleMain$Status PAUSED -> d
    com.softenido.audible.AudibleMain$Status EDIT -> e
    int value -> f
    com.softenido.audible.AudibleMain$Status[] $VALUES -> g
    com.softenido.audible.AudibleMain$Status[] values() -> values
    com.softenido.audible.AudibleMain$Status valueOf(java.lang.String) -> valueOf
com.softenido.audible.AudiblePreferenceActivity -> com.softenido.audible.AudiblePreferenceActivity:
    com.softenido.audible.AudiblePreferences preferences -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.softenido.audible.AudiblePreferences -> com.softenido.audible.ac:
    com.softenido.audible.AudiblePreferences instance -> a
    android.content.SharedPreferences settings -> b
    android.content.SharedPreferences$Editor editor -> c
    boolean modified -> d
    java.lang.String[] iso3 -> e
    java.lang.String[] iso3Key -> f
    java.lang.String[] languajes -> h
    java.util.HashMap countryKey -> g
    java.lang.String[] locales -> i
    com.softenido.audible.AudiblePreferences getInstance(android.content.Context) -> a
    android.content.SharedPreferences$Editor edit() -> I
    void commit() -> a
    void setModified$1385ff() -> b
    java.lang.String getTitle() -> c
    void setTitle(java.lang.String) -> a
    java.lang.String getBody() -> d
    void setBody(java.lang.String) -> b
    boolean isPhrase() -> e
    java.lang.String getTheme() -> f
    java.lang.String getLangDefault() -> g
    boolean getLangDetect() -> h
    java.lang.String[] getLanguages() -> i
    java.lang.String[] getLocales() -> j
    boolean getReadingLowercase() -> k
    boolean getReadingIgnoreTitle() -> l
    boolean getReadingIgnoreTitleRepeated() -> m
    boolean getReadingIgnoreParentheses() -> n
    boolean getReadingIgnoreSquarebrackets() -> o
    boolean getReadingIgnoreCurlybrackets() -> p
    boolean getReadingIgnorePipe() -> q
    boolean getReadingIgnoreUnderscore() -> r
    boolean getReadingIgnoreHyphens() -> s
    boolean getReadingIgnoreAsterisk() -> t
    java.lang.String getFontTypeFace() -> u
    int getFontSize() -> v
    boolean getFontBold() -> w
    boolean isAuto() -> x
    void setAuto(boolean) -> a
    boolean isAutoPlay() -> y
    boolean isAutoExit() -> z
    boolean isAutoScreenLock() -> A
    boolean isToasts() -> B
    boolean isProgress() -> C
    boolean isEarlySave() -> D
    boolean isEarlyDetect() -> E
    int getQuickStart() -> F
    boolean isVolume() -> G
    int getLangUnit() -> H
    int getInt(java.lang.String,int) -> a
com.softenido.audible.FontConfig -> com.softenido.audible.ad:
    int dp -> a
    android.graphics.Typeface typeface -> b
    float size -> c
    com.softenido.audible.FontConfig NORMAL -> d
com.softenido.audible.KeepAudibleLoadService -> com.softenido.audible.KeepAudibleLoadService:
    java.lang.String profilerName -> a
    com.softenido.gutenberg.GutenbergLanguageClassifier classifier -> b
    com.softenido.audible.AudiblePreferences settings -> c
    android.content.Intent intent -> g
    int NOTIFICATION_ID -> h
    com.softenido.cafedroid.services.LocalServiceConnection connection -> i
    com.softenido.audible.KeepAudibleLoadService keep -> j
    android.app.NotificationManager mgr -> k
    boolean active -> d
    int countdown -> e
    void onCreate() -> onCreate
    com.softenido.gutenberg.GutenbergLanguageClassifier getClassifier() -> a
    com.softenido.audible.AudiblePreferences getPreferences(android.content.Context) -> a
    android.app.Notification buidNotification() -> b
    void connect(android.app.Activity) -> a
    void setActive(boolean,int) -> a
    android.app.NotificationManager access$002(android.app.NotificationManager) -> a
    com.softenido.audible.KeepAudibleLoadService access$102(com.softenido.audible.KeepAudibleLoadService) -> a
    com.softenido.audible.KeepAudibleLoadService access$100() -> c
    int access$200() -> d
com.softenido.audible.KeepAudibleLoadService$1 -> com.softenido.audible.ae:
    boolean initialize(java.lang.String) -> a
com.softenido.audible.KeepAudibleLoadService$2 -> com.softenido.audible.af:
    android.content.Context val$context -> a
    void onConnected(com.softenido.cafedroid.services.LocalService) -> a
com.softenido.audible.KeepAudibleLoadService$3 -> com.softenido.audible.ag:
    com.softenido.audible.KeepAudibleLoadService this$0 -> a
    void run() -> run
com.softenido.audible.Theme -> com.softenido.audible.ah:
    com.softenido.audible.Theme Light -> a
    com.softenido.audible.Theme Gray -> b
    com.softenido.audible.Theme Dark -> c
    int textColor -> d
    int backGroundColor -> e
    com.softenido.audible.Theme[] $VALUES -> f
    com.softenido.audible.Theme[] values() -> values
    com.softenido.audible.Theme valueOf(java.lang.String) -> valueOf
com.softenido.cafecore.gauge.AbstractGaugeProgress -> com.softenido.a.a.a:
    long iniTime -> c
    long curTime -> d
    int curVal -> e
    int maxVal -> f
    double done -> g
    boolean started -> h
    boolean force -> i
    java.lang.String prefix -> j
    boolean showPrev -> k
    boolean showNext -> l
    boolean showFull -> m
    java.text.NumberFormat fmt -> a
    com.softenido.cafecore.text.HumanMillisFormat fmtTime -> b
    void start(int) -> a
    void close() -> a
    void setVal(int) -> b
    void setMax(int) -> c
    void paint(boolean,int,int,java.lang.String,double,java.lang.String) -> a
    void paintLazy() -> c
    void setShow(boolean,boolean,boolean) -> a
    void invalidate() -> b
com.softenido.cafecore.gauge.DebugGauge -> com.softenido.a.a.b:
    com.softenido.cafecore.gauge.GaugeProgress gp -> a
    com.softenido.cafecore.gauge.GaugeView gv -> b
    java.lang.String name -> c
    java.util.logging.Logger logger -> d
    com.softenido.cafecore.gauge.GaugeView wrap(com.softenido.cafecore.gauge.GaugeView) -> a
    void setShow(boolean,boolean,boolean) -> a
    void paint(boolean,int,int,java.lang.String,double,java.lang.String) -> a
com.softenido.cafecore.gauge.GaugeProgress -> com.softenido.a.a.c:
    void setShow(boolean,boolean,boolean) -> a
com.softenido.cafecore.gauge.GaugeView -> com.softenido.a.a.d:
    void paint(boolean,int,int,java.lang.String,double,java.lang.String) -> a
com.softenido.cafecore.gauge.NullGauge -> com.softenido.a.a.e:
    void setShow(boolean,boolean,boolean) -> a
    void paint(boolean,int,int,java.lang.String,double,java.lang.String) -> a
com.softenido.cafecore.gauge.ProxyGaugeProgress -> com.softenido.a.a.f:
    com.softenido.cafecore.gauge.GaugeView view -> c
    void setView(com.softenido.cafecore.gauge.GaugeView) -> a
    void paint(boolean,int,int,java.lang.String,double,java.lang.String) -> a
com.softenido.cafecore.io.Files -> com.softenido.a.b.a:
    java.lang.String[][] escapeCharacters -> a
    byte[] bytesFromFile(java.io.InputStream) -> a
com.softenido.cafecore.logging.AbstractStatusNotifier -> com.softenido.a.c.a:
    int offValue -> b
    int levelValue -> a
    boolean isLoggable(java.util.logging.Level) -> a
com.softenido.cafecore.logging.NullStatusNotifier -> com.softenido.a.c.b:
    void log(java.util.logging.Level,java.lang.String,java.lang.Object[]) -> a
com.softenido.cafecore.logging.StatusNotifier -> com.softenido.a.c.c:
    void log(java.util.logging.Level,java.lang.String,java.lang.Object[]) -> a
com.softenido.cafecore.profile.NanoProfiler -> com.softenido.a.d.a:
    java.lang.Object lock -> e
    long count -> f
    long nsSum -> g
    long nsMin -> h
    long nsMax -> i
    long nsFirst -> j
    long nsLast -> k
    com.softenido.cafecore.profile.ProfileRecord open() -> a
    int close(com.softenido.cafecore.profile.ProfileRecord) -> a
    java.lang.String toString() -> toString
com.softenido.cafecore.profile.NullProfiler -> com.softenido.a.d.b:
    com.softenido.cafecore.profile.ProfileRecord open() -> a
    int close(com.softenido.cafecore.profile.ProfileRecord) -> a
    java.lang.String toString() -> toString
com.softenido.cafecore.profile.ProfileManager -> com.softenido.a.d.c:
    java.lang.Object lock -> c
    com.softenido.cafecore.profile.ProfileManager real -> d
    com.softenido.cafecore.profile.ProfileManager fake -> e
    boolean enabled -> a
    java.util.HashMap map -> b
    com.softenido.cafecore.profile.ProfileManager getProfileManager(boolean) -> a
    com.softenido.cafecore.profile.Profiler demandLogger(java.lang.String) -> a
com.softenido.cafecore.profile.ProfileManager$1 -> com.softenido.a.d.d:
    com.softenido.cafecore.profile.Profiler demandLogger(java.lang.String) -> a
com.softenido.cafecore.profile.ProfileRecord -> com.softenido.a.d.e:
    long startTime -> a
    long estimatedTime() -> a
com.softenido.cafecore.profile.Profiler -> com.softenido.a.d.f:
    java.lang.String name -> a
    com.softenido.cafecore.profile.ProfileManager manager -> b
    boolean active -> c
    boolean lineFeed -> d
    com.softenido.cafecore.profile.Profiler getProfiler(java.lang.String) -> a
    void setActive$1385ff() -> b
    com.softenido.cafecore.profile.ProfileRecord open() -> a
    int close(com.softenido.cafecore.profile.ProfileRecord) -> a
    void setLineFeed$1385ff() -> c
    void print(java.io.PrintStream) -> a
com.softenido.cafecore.statistics.classifier.AbstractClassifier -> com.softenido.a.e.a.a:
    java.lang.String unmatched -> a
    int saveThresold -> b
    boolean optimize -> c
    void coach(java.lang.String,java.lang.String,int) -> a
    com.softenido.cafecore.statistics.classifier.Score classify(java.lang.String[]) -> a
    com.softenido.cafecore.statistics.classifier.Score[] classify(com.softenido.cafecore.statistics.classifier.Score[],java.lang.String[]) -> a
    void load$10ffa909(java.io.InputStream,java.lang.String[]) -> a
    boolean[] getAllowed(java.lang.String[],java.lang.String[]) -> a
    double probability(int,int,int,int) -> a
    void setUnmatched(java.lang.String) -> a
com.softenido.cafecore.statistics.classifier.AbstractLanguageClassifier -> com.softenido.a.e.a.b:
    boolean initialized -> e
    java.lang.Object lock -> f
    java.util.Queue langs -> g
    com.softenido.cafecore.logging.StatusNotifier statusNotifier -> h
    boolean add(java.lang.String[]) -> a
    boolean initialize() -> a
    boolean initialize(java.lang.String) -> a
    com.softenido.cafecore.statistics.classifier.Score classify(java.util.Scanner) -> a
    com.softenido.cafecore.statistics.classifier.Score classify(java.lang.String) -> b
    boolean initializeLoop() -> b
    void setStatusNotifier(com.softenido.cafecore.logging.StatusNotifier) -> a
com.softenido.cafecore.statistics.classifier.BaseTextClassifier -> com.softenido.a.e.a.c:
    com.softenido.cafecore.statistics.classifier.Classifier classifier -> a
    boolean group -> b
    int sampleLimit -> e
    java.util.Set asianCharsType -> c
    int[] letterables -> d
    com.softenido.cafecore.statistics.classifier.Score classify(java.util.Scanner) -> a
    com.softenido.cafecore.statistics.classifier.Score classify(java.lang.String) -> b
    boolean isLetterOrDigit(int) -> a
    java.lang.String[] split(java.lang.String) -> a
    java.lang.String filter(java.lang.String) -> e
    void load$10ffa909(java.io.InputStream,java.lang.String[]) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    boolean containsCategory(java.lang.String) -> c
    void setUnmatched(java.lang.String) -> d
com.softenido.cafecore.statistics.classifier.BaseTextClassifier$1 -> com.softenido.a.e.a.d:
com.softenido.cafecore.statistics.classifier.Classifier -> com.softenido.a.e.a.e:
    com.softenido.cafecore.statistics.classifier.Score classify(java.lang.String[]) -> a
    boolean containsCategory(java.lang.String) -> b
    void setUnmatched(java.lang.String) -> a
    void load$10ffa909(java.io.InputStream,java.lang.String[]) -> a
com.softenido.cafecore.statistics.classifier.ClassifierFormatException -> com.softenido.a.e.a.f:
com.softenido.cafecore.statistics.classifier.LanguageClassifier -> com.softenido.a.e.a.g:
    com.softenido.cafecore.statistics.classifier.Score classify(java.lang.String) -> b
    boolean firstPass() -> c
    boolean secondPass() -> d
com.softenido.cafecore.statistics.classifier.NaiveParallelClassifier -> com.softenido.a.e.a.h:
    java.lang.Object lock -> k
    int total -> d
    int count -> e
    int size -> f
    java.lang.String[] categoryName -> g
    int[] categoryCount -> h
    java.util.HashMap categoryIndex -> i
    java.util.HashMap words -> j
    boolean cacheable -> l
    int threshold -> m
    void coach(java.lang.String,java.lang.String,int) -> a
    int[] wordCount(java.lang.String,boolean) -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    double[] probability(int[],int[],int,int) -> a
    com.softenido.cafecore.statistics.classifier.Score[] classify(com.softenido.cafecore.statistics.classifier.Score[],java.lang.String[]) -> a
    boolean containsCategory(java.lang.String) -> b
com.softenido.cafecore.statistics.classifier.Score -> com.softenido.a.e.a.i:
    java.lang.String name -> a
    double value -> b
    java.lang.String getName() -> a
    java.lang.String toString() -> toString
com.softenido.cafecore.text.HumanMillisFormat -> com.softenido.a.f.a:
    int[] MILLIS -> a
    java.lang.String[] UNITS -> b
    java.text.NumberFormat FMT1 -> c
    java.text.NumberFormat FMT2 -> d
    java.text.NumberFormat fmt -> e
    int minItems -> f
    int maxItems -> g
    int round -> h
    java.lang.String toString(long) -> a
com.softenido.cafecore.text.Paragraphs -> com.softenido.a.f.b:
    java.lang.String[] split$7aa5cebc(java.lang.String) -> a
com.softenido.cafecore.text.Phrases -> com.softenido.a.f.c:
    java.util.logging.Logger logger -> f
    java.lang.String[] REGEX -> a
    java.util.regex.Pattern[] patterns -> b
    int[] statistics -> c
    int failures -> d
    boolean $assertionsDisabled -> e
    java.util.regex.Pattern[] getPatterns() -> a
    java.util.List splitByPattern(java.lang.String) -> a
    java.lang.String[] split(java.lang.String,int) -> a
    boolean dotContinued(java.lang.String) -> b
com.softenido.cafecore.text.Phrases$Phrase -> com.softenido.a.f.d:
    java.lang.String full -> a
    java.lang.String trim -> b
    int size -> c
com.softenido.cafecore.util.RepeatedMap -> com.softenido.a.g.a:
    java.util.HashMap map -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object[] get(java.lang.Object[],java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.String toString() -> toString
com.softenido.cafecore.util.SimpleInteger -> com.softenido.a.g.b:
    int value -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int get() -> a
com.softenido.cafecore.util.Sorts -> com.softenido.a.g.c:
    java.util.Comparator asStringComparatorIgnoreCase() -> a
com.softenido.cafecore.util.Sorts$2 -> com.softenido.a.g.d:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.softenido.cafecore.util.Strings -> com.softenido.a.g.e:
    java.lang.String trimWhitespaces(java.lang.String) -> a
    java.lang.String isnull(java.lang.String,java.lang.String,java.lang.String[]) -> a
com.softenido.cafedroid.R -> com.softenido.cafedroid.a:
com.softenido.cafedroid.R$id -> com.softenido.cafedroid.b:
    int AboutAppDescription -> a
    int AboutAppLabel -> b
    int AboutAppVersionName -> c
    int AboutCopyRight -> d
    int AboutWebUrl1 -> e
    int AboutWebUrl2 -> f
    int AboutWebUrl3 -> g
    int aboutLayout -> h
    int about_locale -> i
    int admob_listactivity_linearlayout -> j
    int bAboutAccept -> k
    int bAboutFeedback -> l
    int body_edit -> m
    int engine_install -> n
    int extra_copy -> o
    int extra_erase -> p
    int extra_file -> q
    int extra_keyboard -> r
    int extra_paste -> s
    int extra_sendto -> t
    int gauge_progress -> u
    int gauge_progress_bar -> v
    int gauge_progress_text -> w
    int layout_home_extra -> x
    int layout_home_text -> y
    int mainLayout -> z
    int main_toggle_pannel -> A
    int paragraph_id -> B
    int player_next -> C
    int player_pause -> D
    int player_play -> E
    int player_prev -> F
    int player_resume -> G
    int player_stop -> H
    int queue -> I
    int seekbar_view -> J
    int seekbar_view_add -> K
    int seekbar_view_bar -> L
    int seekbar_view_sub -> M
    int seekbar_view_text -> N
    int setup -> O
    int title -> P
    int toggle_advance -> Q
    int toggle_auto -> R
    int toggle_detect_lang -> S
    int toggle_extra -> T
    int toggle_phrase -> U
    int toggle_volume -> V
com.softenido.cafedroid.R$layout -> com.softenido.cafedroid.c:
    int about_generic -> a
    int about_gpl3 -> b
    int activity_home -> c
    int admob_listactivity_listview -> d
    int gauge_progress_view -> e
    int gauge_progress_view_med -> f
    int gauge_progress_view_thin -> g
    int layout_home_buttons -> h
    int layout_home_extra -> i
    int layout_home_text -> j
    int layout_home_toggle -> k
    int layout_home_volume -> l
    int paragraph_view -> m
    int preferences -> n
    int seekbar_view -> o
    int seekbar_view_add_sub -> p
com.softenido.cafedroid.R$string -> com.softenido.cafedroid.d:
    int about -> a
    int about_feedback -> b
    int about_feedback_title -> c
    int activity_preference_label -> d
    int advanced_early_save -> e
    int advanced_early_save_off -> f
    int advanced_early_save_on -> g
    int advanced_quick_start -> h
    int app_name -> i
    int app_name_version -> j
    int battery_health_cold -> k
    int battery_health_dead -> l
    int battery_health_good -> m
    int battery_health_over_voltage -> n
    int battery_health_overheat -> o
    int battery_health_unknown -> p
    int battery_health_unspecified_failure -> q
    int battery_plugged_ac -> r
    int battery_plugged_battery -> s
    int battery_plugged_plugged -> t
    int battery_plugged_usb -> u
    int battery_status_charging -> v
    int battery_status_discharging -> w
    int battery_status_full -> x
    int battery_status_not_charging -> y
    int battery_status_unknown -> z
    int choose_send_with -> A
    int choose_text_file_with -> B
    int end_of_the_reading -> C
    int gplv3_brief -> D
    int lang_prompt_doc -> E
    int lang_prompt_par -> F
    int locknow_description -> G
    int locknow_explanation -> H
    int notify_keep_text -> I
    int notify_keep_ticker -> J
    int preferences_about_title -> K
    int preferences_advanced -> L
    int preferences_auto_auto_summary_off -> M
    int preferences_auto_auto_summary_on -> N
    int preferences_auto_auto_title -> O
    int preferences_auto_exit_summary_off -> P
    int preferences_auto_exit_summary_on -> Q
    int preferences_auto_exit_title -> R
    int preferences_auto_play_summary_off -> S
    int preferences_auto_play_summary_on -> T
    int preferences_auto_play_title -> U
    int preferences_auto_screenlock_summary_off -> V
    int preferences_auto_screenlock_summary_on -> W
    int preferences_auto_screenlock_title -> X
    int preferences_auto_title -> Y
    int preferences_ignore_asterisk_summary -> Z
    int preferences_ignore_asterisk_title -> aa
    int preferences_ignore_curlybrackets_summry_off -> ab
    int preferences_ignore_curlybrackets_summry_on -> ac
    int preferences_ignore_curlybrackets_title -> ad
    int preferences_ignore_hyphens_summary -> ae
    int preferences_ignore_hyphens_title -> af
    int preferences_ignore_parentheses_summary_off -> ag
    int preferences_ignore_parentheses_summary_on -> ah
    int preferences_ignore_parentheses_title -> ai
    int preferences_ignore_pipe_summary_off -> aj
    int preferences_ignore_pipe_summary_on -> ak
    int preferences_ignore_pipe_title -> al
    int preferences_ignore_repeated_title_summary_off -> am
    int preferences_ignore_repeated_title_summary_on -> an
    int preferences_ignore_repeated_title_title -> ao
    int preferences_ignore_squarebrackets_summary_off -> ap
    int preferences_ignore_squarebrackets_summary_on -> aq
    int preferences_ignore_squarebrackets_title -> ar
    int preferences_ignore_summary -> as
    int preferences_ignore_title -> at
    int preferences_ignore_title_title -> au
    int preferences_ignore_underscore_summary_off -> av
    int preferences_ignore_underscore_summary_on -> aw
    int preferences_ignore_underscore_title -> ax
    int preferences_language_avaliable_summary -> ay
    int preferences_language_avaliable_title -> az
    int preferences_language_category -> aA
    int preferences_language_default_summary -> aB
    int preferences_language_default_title -> aC
    int preferences_language_detect_summary_off -> aD
    int preferences_language_detect_summary_on -> aE
    int preferences_language_detect_title -> aF
    int preferences_language_early_detect_summary_off -> aG
    int preferences_language_early_detect_summary_on -> aH
    int preferences_language_early_detect_title -> aI
    int preferences_language_gender_summary -> aJ
    int preferences_language_gender_title -> aK
    int preferences_optimize_keeps_summary -> aL
    int preferences_optimize_keeps_title -> aM
    int preferences_reading_category -> aN
    int preferences_reading_lowercase_summary_off -> aO
    int preferences_reading_lowercase_summary_on -> aP
    int preferences_reading_lowercase_title -> aQ
    int preferences_title_optimization -> aR
    int preferences_ui_category -> aS
    int preferences_ui_fontbold_summary_off -> aT
    int preferences_ui_fontbold_summary_on -> aU
    int preferences_ui_fontbold_title -> aV
    int preferences_ui_fontfamily_summary -> aW
    int preferences_ui_fontfamily_title -> aX
    int preferences_ui_fontsize_summary -> aY
    int preferences_ui_fontsize_title -> aZ
    int preferences_ui_progress_summary -> ba
    int preferences_ui_progress_summary_off -> bb
    int preferences_ui_progress_title -> bc
    int preferences_ui_progress_volume_off -> bd
    int preferences_ui_progress_volume_summary_on -> be
    int preferences_ui_progress_volume_title -> bf
    int preferences_ui_theme_summary -> bg
    int preferences_ui_theme_title -> bh
    int preferences_ui_toasts_summary_off -> bi
    int preferences_ui_toasts_summary_on -> bj
    int preferences_ui_toasts_title -> bk
    int setup -> bl
    int toggle_advance -> bm
    int toggle_auto -> bn
    int toggle_detect_lang -> bo
    int toggle_extra -> bp
    int toggle_seek_by_phrase -> bq
    int toggle_volume -> br
com.softenido.cafedroid.admob.AdMob -> com.softenido.cafedroid.a.a:
    boolean initialized -> a
    java.lang.String id -> b
    java.util.HashSet testDevices -> c
    com.google.ads.AdRequest request -> d
    com.softenido.cafedroid.admob.AdMob addAdView(android.app.Activity,com.google.ads.AdSize,android.widget.LinearLayout,boolean) -> a
    com.softenido.cafedroid.admob.AdMob addBanner(android.app.Activity,int,boolean) -> a
    com.softenido.cafedroid.admob.AdMob addBanner(android.app.Activity,int) -> a
com.softenido.cafedroid.admob.AdMobBanner -> com.softenido.cafedroid.a.b:
    com.google.ads.AdView adView -> e
    void finalize() -> finalize
com.softenido.cafedroid.app.NotificationBuilder -> com.softenido.cafedroid.b.a:
    android.content.Context mContext -> a
    long mWhen -> b
    int mSmallIcon -> c
    int mSmallIconLevel -> d
    int mNumber -> e
    java.lang.CharSequence mContentTitle -> f
    java.lang.CharSequence mContentText -> g
    android.app.PendingIntent mContentIntent -> h
    android.app.PendingIntent mDeleteIntent -> i
    java.lang.CharSequence mTickerText -> j
    android.net.Uri mSound -> k
    int mAudioStreamType -> l
    long[] mVibrate -> m
    int mLedArgb -> n
    int mLedOnMs -> o
    int mLedOffMs -> p
    int mDefaults -> q
    int mFlags -> r
    com.softenido.cafedroid.app.NotificationBuilder setSmallIcon$5d1e2457() -> a
    com.softenido.cafedroid.app.NotificationBuilder setContentTitle(java.lang.CharSequence) -> a
    com.softenido.cafedroid.app.NotificationBuilder setContentText(java.lang.CharSequence) -> b
    com.softenido.cafedroid.app.NotificationBuilder setContentIntent(android.app.PendingIntent) -> a
    com.softenido.cafedroid.app.NotificationBuilder setTicker(java.lang.CharSequence) -> c
    com.softenido.cafedroid.app.NotificationBuilder setAutoCancel$1f1ed57a() -> b
    android.app.Notification getNotification() -> c
com.softenido.cafedroid.app.SendEmail -> com.softenido.cafedroid.b.b:
    java.lang.String[] emptyString -> a
    java.io.File[] emptyFile -> b
    java.lang.String chooserTitle -> c
    android.content.Context context -> d
    java.lang.String type -> e
    java.lang.String[] to -> f
    java.lang.String[] cc -> g
    java.lang.String[] bcc -> h
    java.lang.String subject -> i
    java.lang.String body -> j
    java.io.File[] attach -> k
    void send() -> a
com.softenido.cafedroid.app.SendEmailBuilder -> com.softenido.cafedroid.b.c:
    java.lang.String chooserTitle -> a
    android.content.Context context -> b
    java.util.ArrayList to -> c
    java.util.ArrayList cc -> d
    java.util.ArrayList bcc -> e
    java.lang.String subject -> f
    java.lang.String body -> g
    java.util.ArrayList attach -> h
    java.lang.String type -> i
    com.softenido.cafedroid.app.SendEmailBuilder setSubject(java.lang.String) -> a
    com.softenido.cafedroid.app.SendEmailBuilder addTo(java.lang.String) -> b
    com.softenido.cafedroid.app.SendEmail build() -> a
com.softenido.cafedroid.gauge.DroidGaugeBuilder -> com.softenido.cafedroid.c.a:
    int[] INFLATABLE -> a
    com.softenido.cafedroid.gauge.DroidGaugeView createViewBefore$1b857ac8(android.os.Handler,android.app.Activity,com.softenido.cafedroid.gauge.DroidGaugeBuilder$Mode,com.softenido.cafedroid.gauge.DroidGaugeBuilder$Thin) -> a
com.softenido.cafedroid.gauge.DroidGaugeBuilder$Mode -> com.softenido.cafedroid.c.b:
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Mode NONE -> a
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Mode BAR -> b
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Mode TEXT -> c
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Mode BAR_TEXT -> d
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Mode[] $VALUES -> e
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Mode[] values() -> values
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Mode valueOf(java.lang.String) -> valueOf
com.softenido.cafedroid.gauge.DroidGaugeBuilder$Thin -> com.softenido.cafedroid.c.c:
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Thin NORMAL -> a
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Thin MED -> b
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Thin THIN -> c
    int value -> d
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Thin[] $VALUES -> e
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Thin[] values() -> values
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Thin valueOf(java.lang.String) -> valueOf
com.softenido.cafedroid.gauge.DroidGaugeProgress -> com.softenido.cafedroid.c.d:
    com.softenido.cafedroid.gauge.DroidGaugeView view -> c
    void paint(boolean,int,int,java.lang.String,double,java.lang.String) -> a
com.softenido.cafedroid.gauge.DroidGaugeView -> com.softenido.cafedroid.c.e:
    android.os.Handler handler -> a
    android.view.ViewGroup gp -> b
    android.widget.ProgressBar pb -> c
    android.widget.TextView tv -> d
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Mode mode -> e
    boolean force -> f
    boolean started -> g
    double done -> h
    java.lang.String msg -> i
    void setMode(com.softenido.cafedroid.gauge.DroidGaugeBuilder$Mode) -> a
    void paint(boolean,int,int,java.lang.String,double,java.lang.String) -> a
    void init(android.view.ViewGroup,android.widget.ProgressBar,android.widget.TextView,com.softenido.cafedroid.gauge.DroidGaugeBuilder$Mode) -> a
    void gone(android.view.ViewGroup,android.widget.ProgressBar,android.widget.TextView) -> a
    void setVisibility(android.view.View,int) -> a
    void setProgress(android.widget.ProgressBar,double) -> b
    void setText(android.widget.TextView,java.lang.String) -> b
    boolean access$000(com.softenido.cafedroid.gauge.DroidGaugeView) -> a
    android.view.ViewGroup access$100(com.softenido.cafedroid.gauge.DroidGaugeView) -> b
    android.widget.ProgressBar access$200(com.softenido.cafedroid.gauge.DroidGaugeView) -> c
    android.widget.TextView access$300(com.softenido.cafedroid.gauge.DroidGaugeView) -> d
    com.softenido.cafedroid.gauge.DroidGaugeBuilder$Mode access$400(com.softenido.cafedroid.gauge.DroidGaugeView) -> e
    boolean access$002(com.softenido.cafedroid.gauge.DroidGaugeView,boolean) -> a
    boolean access$502$587faa78(com.softenido.cafedroid.gauge.DroidGaugeView) -> f
    double access$602$587f57cc(com.softenido.cafedroid.gauge.DroidGaugeView) -> g
    java.lang.String access$702(com.softenido.cafedroid.gauge.DroidGaugeView,java.lang.String) -> a
    void access$800(android.widget.ProgressBar,double) -> a
    void access$900(android.widget.TextView,java.lang.String) -> a
com.softenido.cafedroid.gauge.DroidGaugeView$1 -> com.softenido.cafedroid.c.f:
    boolean val$started -> a
    double val$done -> b
    java.lang.String val$msg -> c
    com.softenido.cafedroid.gauge.DroidGaugeView this$0 -> d
    void run() -> run
com.softenido.cafedroid.gauge.DroidGaugeView$2 -> com.softenido.cafedroid.c.g:
    int[] $SwitchMap$com$softenido$cafedroid$gauge$DroidGaugeBuilder$Mode -> a
com.softenido.cafedroid.logging.ToastStatusNotifier -> com.softenido.cafedroid.d.a:
    android.content.Context context -> b
    android.os.Handler handler -> c
    int duration -> d
    void log(java.util.logging.Level,java.lang.String,java.lang.Object[]) -> a
com.softenido.cafedroid.logging.ToastStatusNotifier$1 -> com.softenido.cafedroid.d.b:
    java.lang.String val$msg -> a
    java.lang.Object[] val$arguments -> b
    com.softenido.cafedroid.logging.ToastStatusNotifier this$0 -> c
    void run() -> run
com.softenido.cafedroid.os.AndroidVersion -> com.softenido.cafedroid.os.a:
    com.softenido.cafedroid.os.AndroidVersion os -> a
    int SDK -> b
    java.lang.String RELEASE -> c
    java.lang.String NAME -> d
com.softenido.cafedroid.os.Debug -> com.softenido.cafedroid.os.b:
    boolean isDebuggable(android.content.Context) -> a
    boolean setStrictMode(com.softenido.cafedroid.os.Debug$ThreadMode) -> a
    boolean setVmPolicy(com.softenido.cafedroid.os.Debug$VmMode) -> a
com.softenido.cafedroid.os.Debug$ThreadMode -> com.softenido.cafedroid.os.c:
    boolean detectAll -> a
    boolean diskReads -> b
    boolean diskWrites -> c
    boolean network -> d
    boolean penaltyLog -> e
    com.softenido.cafedroid.os.Debug$ThreadMode setDetectAll$4c6c8b33() -> a
com.softenido.cafedroid.os.Debug$VmMode -> com.softenido.cafedroid.os.d:
    boolean detectLeakedSqlLiteObjects -> a
    boolean detectLeakedClosableObjects -> b
    boolean penaltyLog -> c
    boolean penaltyDeath -> d
com.softenido.cafedroid.os.MetaData -> com.softenido.cafedroid.os.e:
    android.os.Bundle getBundle(android.content.Context) -> a
com.softenido.cafedroid.os.PolicyAdmin -> com.softenido.cafedroid.os.PolicyAdmin:
    android.app.Activity activity -> a
    android.content.ComponentName componentName -> b
    android.app.admin.DevicePolicyManager dpm -> c
    void setActiveAdmin(java.lang.String) -> a
    boolean isAdminActive() -> a
    void lockNow() -> b
    void removeActiveAdmin() -> c
com.softenido.cafedroid.os.PolicyAdmin$Receiver -> com.softenido.cafedroid.os.PolicyAdmin$Receiver:
com.softenido.cafedroid.preference.Preferences -> com.softenido.cafedroid.preference.a:
    java.util.HashMap map -> a
    android.preference.PreferenceActivity pa -> b
    android.content.SharedPreferences sharedPreferences -> c
    void updateSummaryAll() -> a
    void updateSummaryAll(android.preference.Preference) -> a
    void updateSummary(java.lang.String) -> a
    void updateSummary(android.preference.Preference) -> b
    void formatSummary(android.preference.Preference,java.lang.String) -> a
com.softenido.cafedroid.preference.SummaryPrefereceActivity -> com.softenido.cafedroid.preference.SummaryPrefereceActivity:
    com.softenido.cafedroid.preference.Preferences preferences -> a
    void onCreate(android.os.Bundle) -> onCreate
    void addPreferencesFromIntent(android.content.Intent) -> addPreferencesFromIntent
    void addPreferencesFromResource(int) -> addPreferencesFromResource
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void onResume() -> onResume
    void onPause() -> onPause
com.softenido.cafedroid.services.LocalService -> com.softenido.cafedroid.services.LocalService:
    boolean sticky -> f
    boolean toastDebug -> a
    int toastLength -> b
    boolean debug -> c
    int length -> d
    java.lang.String name -> e
    android.os.IBinder binder -> g
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onLowMemory() -> onLowMemory
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onRebind(android.content.Intent) -> onRebind
com.softenido.cafedroid.services.LocalService$LocalBinder -> com.softenido.cafedroid.services.a:
    com.softenido.cafedroid.services.LocalService this$0 -> a
    com.softenido.cafedroid.services.LocalService getService() -> a
com.softenido.cafedroid.services.LocalServiceConnection -> com.softenido.cafedroid.services.b:
    android.content.Context context -> a
    java.lang.Class serviceClass -> b
    boolean rebind -> c
    com.softenido.cafedroid.services.LocalService service -> d
    boolean binded -> e
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onConnected(com.softenido.cafedroid.services.LocalService) -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void bindService() -> a
    void finalize() -> finalize
com.softenido.cafedroid.speech.SpeechHearer -> com.softenido.cafedroid.e.a:
    android.app.Activity activity -> a
    java.util.Locale locale -> b
    com.softenido.cafedroid.speech.SpeechManager manager -> c
    java.util.ArrayList text -> d
    boolean hearing -> e
com.softenido.cafedroid.speech.SpeechManager -> com.softenido.cafedroid.e.b:
    android.app.Activity activity -> b
    java.util.Locale locale -> c
    com.softenido.cafedroid.speech.SpeechSpeaker speaker -> d
    com.softenido.cafedroid.speech.SpeechHearer hearer -> e
    com.softenido.cafedroid.speech.SpeechSpeaker getSpeaker() -> b
    void onActivityResult(int,int,android.content.Intent) -> a
    void finalize() -> finalize
    void onSpeekerInstallNeeded() -> a
    void onSpeekerInitied(boolean) -> a
    void shutdown() -> c
com.softenido.cafedroid.speech.SpeechPlayer -> com.softenido.cafedroid.e.c:
    java.lang.Object lock -> b
    boolean classified -> c
    com.softenido.cafedroid.speech.SpeechPlayer$Status status -> d
    com.softenido.cafedroid.speech.SpeechSpeaker speaker -> e
    com.softenido.cafecore.statistics.classifier.LanguageClassifier classifier -> f
    java.lang.String[] paragraphs -> g
    java.lang.String[][] phrases -> h
    java.lang.String[][] langs -> i
    boolean[][] empty -> j
    int[][] progress -> k
    java.util.Locale locale -> l
    int progressMax -> m
    int row -> n
    int col -> o
    java.util.Locale loc -> p
    java.lang.String utterance -> q
    boolean lowerCase -> r
    boolean detection -> s
    java.lang.String ignoreRegex -> t
    java.lang.String alternative -> u
    com.softenido.cafecore.gauge.ProxyGaugeProgress gauge -> v
    android.os.PowerManager$WakeLock wakeLock -> w
    boolean ignoreFirst -> x
    int minPhraseSize -> y
    java.util.List listener -> z
    java.util.HashMap localeMap -> a
    java.util.concurrent.atomic.AtomicBoolean firstSplit -> A
    java.util.concurrent.atomic.AtomicBoolean firstClassify -> B
    java.util.concurrent.atomic.AtomicBoolean firstSpeak -> C
    void finalize() -> finalize
    void setLocale(java.lang.String,java.lang.String) -> a
    void waitFor(java.lang.String[][],int) -> a
    void waitFor(java.lang.String[][],int,int) -> a
    void seek(boolean,boolean) -> a
    boolean play() -> a
    void stop() -> b
    void pause() -> c
    void prev(boolean) -> a
    void next(boolean) -> b
    void setLowerCase(boolean) -> c
    void setDetection(boolean) -> d
    void setIgnorable(java.lang.String,java.lang.String) -> b
    void onStatusPlay() -> j
    void onSpeaking() -> d
    void onStatusPause() -> k
    void onStatusStop() -> l
    void registerOnStatusChangedListener(com.softenido.cafedroid.speech.SpeechPlayer$OnStatusChangedListener) -> a
    void unregisterOnStatusChangedListener(com.softenido.cafedroid.speech.SpeechPlayer$OnStatusChangedListener) -> b
    void setView(com.softenido.cafecore.gauge.GaugeView) -> a
    void setWakeLock(android.os.PowerManager$WakeLock) -> a
    void setIgnoreFirst(boolean) -> e
    void start() -> e
    int getVolume() -> f
    int getMaxVolume() -> g
    void setVolume(int,int) -> a
    void adjustVolume(int,int) -> b
    int getVolumePercentage() -> h
    com.softenido.cafecore.gauge.GaugeProgress getGaugeProgress() -> i
    void access$000(com.softenido.cafedroid.speech.SpeechPlayer) -> a
    void access$100(com.softenido.cafedroid.speech.SpeechPlayer) -> b
    void access$200(com.softenido.cafedroid.speech.SpeechPlayer) -> c
com.softenido.cafedroid.speech.SpeechPlayer$1 -> com.softenido.cafedroid.e.d:
    com.softenido.cafedroid.speech.SpeechPlayer this$0 -> a
    void run() -> run
com.softenido.cafedroid.speech.SpeechPlayer$2 -> com.softenido.cafedroid.e.e:
    com.softenido.cafedroid.speech.SpeechPlayer this$0 -> a
    void run() -> run
com.softenido.cafedroid.speech.SpeechPlayer$3 -> com.softenido.cafedroid.e.f:
    com.softenido.cafedroid.speech.SpeechPlayer this$0 -> a
    void run() -> run
com.softenido.cafedroid.speech.SpeechPlayer$4 -> com.softenido.cafedroid.e.g:
    int[] $SwitchMap$com$softenido$cafedroid$speech$SpeechPlayer$Status -> a
com.softenido.cafedroid.speech.SpeechPlayer$OnStatusChangedListener -> com.softenido.cafedroid.e.h:
    void onStatusPlay() -> a
    void onStatusPlaying$15c63d6c(int) -> a
    void onStatusStop() -> b
    void onStatusPause() -> c
com.softenido.cafedroid.speech.SpeechPlayer$Status -> com.softenido.cafedroid.e.i:
    com.softenido.cafedroid.speech.SpeechPlayer$Status INIT -> a
    com.softenido.cafedroid.speech.SpeechPlayer$Status STOP -> b
    com.softenido.cafedroid.speech.SpeechPlayer$Status PLAY -> c
    com.softenido.cafedroid.speech.SpeechPlayer$Status PAUSE -> d
    com.softenido.cafedroid.speech.SpeechPlayer$Status PREV_ROW -> e
    com.softenido.cafedroid.speech.SpeechPlayer$Status PREV_COL -> f
    com.softenido.cafedroid.speech.SpeechPlayer$Status NEXT_ROW -> g
    com.softenido.cafedroid.speech.SpeechPlayer$Status NEXT_COL -> h
    com.softenido.cafedroid.speech.SpeechPlayer$Status EXIT -> i
    com.softenido.cafedroid.speech.SpeechPlayer$Status[] $VALUES -> j
    com.softenido.cafedroid.speech.SpeechPlayer$Status[] values() -> values
    com.softenido.cafedroid.speech.SpeechPlayer$Status valueOf(java.lang.String) -> valueOf
com.softenido.cafedroid.speech.SpeechSpeaker -> com.softenido.cafedroid.e.j:
    java.lang.String tag -> a
    java.lang.String SILENCE -> b
    android.app.Activity activity -> c
    java.util.Locale locale -> d
    com.softenido.cafedroid.speech.SpeechManager manager -> e
    android.speech.tts.TextToSpeech tts -> f
    boolean InstallNeeded -> g
    boolean success -> h
    java.lang.Object lock -> i
    com.softenido.cafedroid.speech.SpeechSpeaker$Status status -> j
    java.util.List listener -> k
    java.lang.String utteranceLock -> l
    java.util.concurrent.atomic.AtomicInteger count -> m
    java.lang.Object playLock -> n
    android.media.AudioManager audioManager -> o
    boolean start() -> a
    void install() -> b
    void onActivityResult$6eb84b52(int) -> a
    void onInit(int) -> onInit
    int setLanguage(java.util.Locale) -> a
    int isLanguageAvailable(java.util.Locale) -> b
    java.util.Locale[] getAvailableLocales() -> c
    java.util.Locale[] getAvailableLocales(java.util.Locale[]) -> a
    void stop() -> d
    void pause() -> e
    void shutdown() -> f
    java.lang.String speak$4ff2de3f(java.lang.String) -> a
    java.lang.String speak$6fa0def7(java.lang.String,java.lang.String) -> a
    void onUtteranceCompleted(java.lang.String) -> onUtteranceCompleted
    void registerOnSpeakingListener(com.softenido.cafedroid.speech.SpeechSpeaker$OnSpeakingListener) -> a
    void unregisterOnSpeakingListener(com.softenido.cafedroid.speech.SpeechSpeaker$OnSpeakingListener) -> b
    android.media.AudioManager getAudioManager() -> l
    int getVolume() -> g
    int getMaxVolume() -> h
    void setVolume(int,int) -> a
    void adjustVolume(int,int) -> b
    int getVolumePercentage() -> i
    boolean areDefaultsEnforced() -> j
    java.lang.String getDefaultEngine() -> k
com.softenido.cafedroid.speech.SpeechSpeaker$OnSpeakingListener -> com.softenido.cafedroid.e.k:
    void onSpeaking() -> d
com.softenido.cafedroid.speech.SpeechSpeaker$Status -> com.softenido.cafedroid.e.l:
    com.softenido.cafedroid.speech.SpeechSpeaker$Status IDLE -> a
    com.softenido.cafedroid.speech.SpeechSpeaker$Status PLAYING -> b
    com.softenido.cafedroid.speech.SpeechSpeaker$Status PAUSED -> c
    com.softenido.cafedroid.speech.SpeechSpeaker$Status STOPPED -> d
    com.softenido.cafedroid.speech.SpeechSpeaker$Status[] $VALUES -> e
    com.softenido.cafedroid.speech.SpeechSpeaker$Status[] values() -> values
    com.softenido.cafedroid.speech.SpeechSpeaker$Status valueOf(java.lang.String) -> valueOf
com.softenido.cafedroid.util.logging.LogCatHandler -> com.softenido.cafedroid.util.a.a:
    java.lang.Object lock -> a
    com.softenido.cafedroid.util.logging.LogCatHandler instance -> b
    java.util.logging.Handler[] oldHandlers -> c
    void close() -> close
    void flush() -> flush
    void publish(java.util.logging.LogRecord) -> publish
    void setHandler() -> a
com.softenido.cafedroid.util.ui.AboutActivity -> com.softenido.cafedroid.util.ui.AboutActivity:
    int layout -> a
    int bannerLayoutId -> b
    java.lang.CharSequence label -> c
    java.lang.CharSequence description -> d
    java.lang.CharSequence versionName -> e
    java.lang.String copyRight -> f
    java.lang.String url1 -> g
    java.lang.String url2 -> h
    java.lang.String url3 -> i
    java.lang.String email -> j
    com.softenido.cafedroid.admob.AdMob admob -> k
    void onCreate(android.os.Bundle) -> onCreate
com.softenido.cafedroid.util.ui.AboutActivity$1 -> com.softenido.cafedroid.util.ui.a:
    com.softenido.cafedroid.util.ui.AboutActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.softenido.cafedroid.util.ui.AboutActivity$2 -> com.softenido.cafedroid.util.ui.b:
    android.widget.Button val$bFeedback -> a
    com.softenido.cafedroid.util.ui.AboutActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.softenido.cafedroid.util.ui.AboutGPL3Activity -> com.softenido.cafedroid.util.ui.AboutGPL3Activity:
    void onCreate(android.os.Bundle) -> onCreate
com.softenido.cafedroid.util.ui.MarketLinkify -> com.softenido.cafedroid.util.ui.c:
    void addLinks(android.widget.TextView) -> a
com.softenido.cafedroid.util.ui.Notifier -> com.softenido.cafedroid.util.ui.d:
    int level -> a
    com.softenido.cafedroid.util.ui.Notifier build(com.softenido.cafedroid.util.ui.Notifier[]) -> a
    com.softenido.cafedroid.util.ui.Notifier build$615c5ec(android.content.Context,android.os.Handler) -> a
    com.softenido.cafedroid.util.ui.Notifier build$de77421(java.lang.String) -> a
    com.softenido.cafedroid.util.ui.Notifier build() -> a
    void log(int,java.lang.String,java.lang.Throwable) -> a
    void i(java.lang.String) -> b
    void setLevel(int) -> a
com.softenido.cafedroid.util.ui.Notifier$1 -> com.softenido.cafedroid.util.ui.e:
    android.content.Context val$context -> a
    java.lang.String val$msg -> b
    boolean val$lengthLong -> c
    void run() -> run
com.softenido.cafedroid.util.ui.Notifier$2 -> com.softenido.cafedroid.util.ui.f:
    com.softenido.cafedroid.util.ui.Notifier[] val$notifiers -> b
    void log(int,java.lang.String,java.lang.Throwable) -> a
com.softenido.cafedroid.util.ui.Notifier$4 -> com.softenido.cafedroid.util.ui.g:
    android.content.Context val$context -> b
    boolean val$longLength -> c
    android.os.Handler val$handler -> d
    void log(int,java.lang.String,java.lang.Throwable) -> a
com.softenido.cafedroid.util.ui.Notifier$5 -> com.softenido.cafedroid.util.ui.h:
    java.lang.String val$tag -> b
    void log(int,java.lang.String,java.lang.Throwable) -> a
com.softenido.cafedroid.util.ui.Notifier$6 -> com.softenido.cafedroid.util.ui.i:
    void log(int,java.lang.String,java.lang.Throwable) -> a
com.softenido.cafedroid.util.ui.Views -> com.softenido.cafedroid.util.ui.j:
    android.view.View inflate(android.app.Activity,android.widget.LinearLayout,int,int) -> a
    android.view.View inflateBefore$44cbd17e(android.app.Activity,int) -> a
com.softenido.cafedroid.widget.ToggleImageButton -> com.softenido.cafedroid.widget.ToggleImageButton:
    java.lang.Object lock -> c
    int state -> a
    int[] stateResources -> b
    boolean performClick() -> performClick
com.softenido.cafedroid.widget.ToggleTextButton -> com.softenido.cafedroid.widget.ToggleTextButton:
    java.lang.Object lock -> d
    int state -> a
    int[] stateResources -> b
    java.lang.String[] stateNames -> c
    boolean performClick() -> performClick
com.softenido.gutenberg.Gutenberg -> com.softenido.b.a:
    boolean gz -> a
    java.io.InputStream getLanguageDataStream(java.lang.String,boolean) -> a
com.softenido.gutenberg.Gutenberg$Holder -> com.softenido.b.b:
    com.softenido.gutenberg.Gutenberg$Holder INSTANCE -> a
    java.lang.String ISO3_LANGUAGES -> d
    java.lang.String[] iso3Languages -> b
    java.util.Set iso3Set -> c
    com.softenido.gutenberg.Gutenberg$Holder[] $VALUES -> e
    com.softenido.gutenberg.Gutenberg$Holder[] values() -> values
    com.softenido.gutenberg.Gutenberg$Holder valueOf(java.lang.String) -> valueOf
com.softenido.gutenberg.GutenbergLanguageClassifier -> com.softenido.b.c:
    java.util.HashSet categoryLock -> e
    boolean twoPasses -> f
    java.util.Queue langsSecondPass -> g
    boolean add(java.lang.String[]) -> a
    boolean initialize(java.lang.String) -> a
    boolean containsCategory(java.lang.String) -> c
    void setTwoPasses(boolean) -> a
    boolean firstPass() -> c
    boolean secondPass() -> d
